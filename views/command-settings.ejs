<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Command Settings - Discord Bot Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --discord-dark: #2C2F33;
            --discord-darker: #23272A;
            --discord-blurple: #5865F2;
            --discord-green: #57F287;
            --discord-red: #ED4245;
        }

        body {
            background: linear-gradient(135deg, var(--discord-darker) 0%, var(--discord-dark) 100%);
            min-height: 100vh;
            color: #fff;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .navbar {
            background: var(--discord-darker) !important;
            box-shadow: 0 2px 10px rgba(0,0,0,0.3);
        }

        .card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(88, 101, 242, 0.3);
        }

        .btn-primary {
            background: var(--discord-blurple);
            border: none;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background: #4752C4;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(88, 101, 242, 0.4);
        }

        .btn-success {
            background: var(--discord-green);
            border: none;
        }

        .btn-danger {
            background: var(--discord-red);
            border: none;
        }

        .form-control, .form-select {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: #fff;
        }

        .form-control:focus, .form-select:focus {
            background: rgba(255, 255, 255, 0.08);
            border-color: var(--discord-blurple);
            color: #fff;
            box-shadow: 0 0 0 0.25rem rgba(88, 101, 242, 0.25);
        }

        .form-check-input {
            background-color: rgba(255, 255, 255, 0.1);
            border-color: rgba(255, 255, 255, 0.2);
        }

        .form-check-input:checked {
            background-color: var(--discord-blurple);
            border-color: var(--discord-blurple);
        }

        .variable-tag {
            display: inline-block;
            background: var(--discord-blurple);
            color: white;
            padding: 3px 8px;
            border-radius: 5px;
            font-size: 0.85em;
            margin: 2px;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .variable-tag:hover {
            background: #4752C4;
            transform: scale(1.05);
        }

        .accordion-button {
            background: rgba(255, 255, 255, 0.05);
            color: #fff;
            border: none;
        }

        .accordion-button:not(.collapsed) {
            background: var(--discord-blurple);
            color: #fff;
        }

        .accordion-button:focus {
            box-shadow: 0 0 0 0.25rem rgba(88, 101, 242, 0.25);
        }

        .accordion-body {
            background: rgba(255, 255, 255, 0.02);
            color: #fff;
        }

        .alert {
            border: none;
            border-radius: 10px;
        }

        .message-preview {
            background: rgba(255, 255, 255, 0.05);
            border-left: 4px solid var(--discord-blurple);
            padding: 15px;
            border-radius: 8px;
            margin-top: 10px;
        }

        .nav-tabs .nav-link {
            color: rgba(255, 255, 255, 0.6);
            border: none;
            background: transparent;
        }

        .nav-tabs .nav-link.active {
            color: #fff;
            background: rgba(88, 101, 242, 0.2);
            border-bottom: 2px solid var(--discord-blurple);
        }

        .badge {
            font-weight: 500;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <% if (bot && bot.displayAvatarURL) { %>
                    <img src="<%= bot.displayAvatarURL() %>" alt="Bot" style="width: 32px; height: 32px; border-radius: 50%; margin-right: 10px;">
                <% } %>
                <%= bot ? bot.username : 'Discord Bot' %> Dashboard
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/"><i class="fas fa-home"></i> Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/logs"><i class="fas fa-list"></i> Logs</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/commands"><i class="fas fa-terminal"></i> Commands</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1><i class="fas fa-cog"></i> Command Settings</h1>
                        <p class="text-muted">Customize messages and behavior for moderation commands</p>
                    </div>
                    <a href="/commands" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Commands
                    </a>
                </div>
            </div>
        </div>

        <!-- Alert for messages -->
        <div id="alertContainer"></div>

        <!-- Info Card -->
        <div class="card mb-4">
            <div class="card-body">
                <h5><i class="fas fa-info-circle"></i> Available Variables</h5>
                <p class="mb-2">Use these variables in your custom messages:</p>
                <div>
                    <span class="variable-tag" onclick="copyVariable('{server}')">{server}</span>
                    <span class="variable-tag" onclick="copyVariable('{user}')">{user}</span>
                    <span class="variable-tag" onclick="copyVariable('{reason}')">{reason}</span>
                    <span class="variable-tag" onclick="copyVariable('{moderator}')">{moderator}</span>
                </div>
                <small class="text-muted mt-2 d-block">Click on a variable to copy it</small>
            </div>
        </div>

        <!-- Commands Accordion -->
        <div class="accordion" id="commandsAccordion">
            <% customizableCommands.forEach((cmd, index) => { %>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="heading<%= index %>">
                        <button class="accordion-button <%= index !== 0 ? 'collapsed' : '' %>" type="button" data-bs-toggle="collapse" data-bs-target="#collapse<%= index %>">
                            <i class="fas fa-terminal me-2"></i>
                            <strong><%= cmd.name %></strong>
                            <span class="badge bg-info ms-2"><%= cmd.category %></span>
                            <% if (commandSettings[cmd.name]) { %>
                                <span class="badge bg-success ms-2">
                                    <i class="fas fa-check"></i> Customized
                                </span>
                            <% } %>
                        </button>
                    </h2>
                    <div id="collapse<%= index %>" class="accordion-collapse collapse <%= index === 0 ? 'show' : '' %>">
                        <div class="accordion-body">
                            <p class="text-muted"><%= cmd.description %></p>

                            <!-- DM Settings -->
                            <div class="form-check form-switch mb-3">
                                <input class="form-check-input" type="checkbox" id="dmUser_<%= cmd.name %>" 
                                    <%= commandSettings[cmd.name]?.dmUser !== false ? 'checked' : '' %>
                                    onchange="updateDMSetting('<%= cmd.name %>', this.checked)">
                                <label class="form-check-label" for="dmUser_<%= cmd.name %>">
                                    <i class="fas fa-envelope"></i> Send DM to user
                                </label>
                            </div>

                            <!-- Message Types Tabs -->
                            <ul class="nav nav-tabs mb-3" role="tablist">
                                <li class="nav-item">
                                    <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#dmMessage_<%= cmd.name %>">
                                        DM Message
                                    </button>
                                </li>
                                <li class="nav-item">
                                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#noPermission_<%= cmd.name %>">
                                        No Permission
                                    </button>
                                </li>
                                <li class="nav-item">
                                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#noTarget_<%= cmd.name %>">
                                        No Target
                                    </button>
                                </li>
                                <li class="nav-item">
                                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#error_<%= cmd.name %>">
                                        Error
                                    </button>
                                </li>
                            </ul>

                            <div class="tab-content">
                                <!-- DM Message -->
                                <div class="tab-pane fade show active" id="dmMessage_<%= cmd.name %>">
                                    <label class="form-label">Custom DM Message</label>
                                    <textarea class="form-control mb-2" rows="3" id="msg_dmMessage_<%= cmd.name %>" 
                                        placeholder="You have been <%= cmd.name %>ed from {server}. Reason: {reason}"><%= commandSettings[cmd.name]?.messages?.dmMessage || '' %></textarea>
                                    <button class="btn btn-primary btn-sm" onclick="saveMessage('<%= cmd.name %>', 'dmMessage')">
                                        <i class="fas fa-save"></i> Save
                                    </button>
                                    <button class="btn btn-secondary btn-sm" onclick="resetMessage('<%= cmd.name %>', 'dmMessage')">
                                        <i class="fas fa-undo"></i> Reset
                                    </button>
                                </div>

                                <!-- No Permission -->
                                <div class="tab-pane fade" id="noPermission_<%= cmd.name %>">
                                    <label class="form-label">No Permission Message</label>
                                    <textarea class="form-control mb-2" rows="3" id="msg_noPermission_<%= cmd.name %>" 
                                        placeholder="❌ You need **<%= cmd.name.charAt(0).toUpperCase() + cmd.name.slice(1) %> Members** permission!"><%= commandSettings[cmd.name]?.messages?.noPermission || '' %></textarea>
                                    <button class="btn btn-primary btn-sm" onclick="saveMessage('<%= cmd.name %>', 'noPermission')">
                                        <i class="fas fa-save"></i> Save
                                    </button>
                                    <button class="btn btn-secondary btn-sm" onclick="resetMessage('<%= cmd.name %>', 'noPermission')">
                                        <i class="fas fa-undo"></i> Reset
                                    </button>
                                </div>

                                <!-- No Target -->
                                <div class="tab-pane fade" id="noTarget_<%= cmd.name %>">
                                    <label class="form-label">No Target Message</label>
                                    <textarea class="form-control mb-2" rows="3" id="msg_noTarget_<%= cmd.name %>" 
                                        placeholder="❌ Please mention a user to <%= cmd.name %>!"><%= commandSettings[cmd.name]?.messages?.noTarget || '' %></textarea>
                                    <button class="btn btn-primary btn-sm" onclick="saveMessage('<%= cmd.name %>', 'noTarget')">
                                        <i class="fas fa-save"></i> Save
                                    </button>
                                    <button class="btn btn-secondary btn-sm" onclick="resetMessage('<%= cmd.name %>', 'noTarget')">
                                        <i class="fas fa-undo"></i> Reset
                                    </button>
                                </div>

                                <!-- Error -->
                                <div class="tab-pane fade" id="error_<%= cmd.name %>">
                                    <label class="form-label">Error Message</label>
                                    <textarea class="form-control mb-2" rows="3" id="msg_error_<%= cmd.name %>" 
                                        placeholder="❌ Failed to <%= cmd.name %> user!"><%= commandSettings[cmd.name]?.messages?.error || '' %></textarea>
                                    <button class="btn btn-primary btn-sm" onclick="saveMessage('<%= cmd.name %>', 'error')">
                                        <i class="fas fa-save"></i> Save
                                    </button>
                                    <button class="btn btn-secondary btn-sm" onclick="resetMessage('<%= cmd.name %>', 'error')">
                                        <i class="fas fa-undo"></i> Reset
                                    </button>
                                </div>
                            </div>

                            <!-- Reset All Button -->
                            <hr>
                            <button class="btn btn-danger btn-sm" onclick="resetCommand('<%= cmd.name %>')">
                                <i class="fas fa-trash"></i> Reset All Settings for this Command
                            </button>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function showAlert(message, type = 'success') {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            document.getElementById('alertContainer').innerHTML = alertHtml;
            setTimeout(() => {
                document.getElementById('alertContainer').innerHTML = '';
            }, 5000);
        }

        function copyVariable(variable) {
            navigator.clipboard.writeText(variable);
            showAlert(`Copied ${variable} to clipboard!`, 'info');
        }

        async function updateDMSetting(command, enabled) {
            try {
                const response = await fetch('/commands/settings', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        command: command,
                        settings: { dmUser: enabled }
                    })
                });

                const data = await response.json();
                if (data.success) {
                    showAlert(`DM setting for ${command} updated!`, 'success');
                } else {
                    showAlert('Failed to update DM setting', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('Error updating DM setting', 'danger');
            }
        }

        async function saveMessage(command, messageType) {
            const textarea = document.getElementById(`msg_${messageType}_${command}`);
            const message = textarea.value.trim();

            try {
                const response = await fetch('/commands/settings', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        command: command,
                        settings: {
                            messages: {
                                [messageType]: message
                            }
                        }
                    })
                });

                const data = await response.json();
                if (data.success) {
                    showAlert(`Custom ${messageType} message saved for ${command}!`, 'success');
                } else {
                    showAlert('Failed to save message', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('Error saving message', 'danger');
            }
        }

        async function resetMessage(command, messageType) {
            document.getElementById(`msg_${messageType}_${command}`).value = '';
            await saveMessage(command, messageType);
            showAlert(`Reset ${messageType} message for ${command}`, 'success');
        }

        async function resetCommand(command) {
            if (!confirm(`Are you sure you want to reset ALL settings for the ${command} command?`)) {
                return;
            }

            try {
                const response = await fetch('/commands/settings', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        command: command,
                        settings: null
                    })
                });

                const data = await response.json();
                if (data.success) {
                    showAlert(`All settings reset for ${command}!`, 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showAlert('Failed to reset command', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('Error resetting command', 'danger');
            }
        }
    </script>
</body>
</html>